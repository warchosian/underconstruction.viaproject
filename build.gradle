/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
  // https://mvnrepository.com/artifact/commons-configuration/commons-configuration
compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'

    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
	
	// https://mvnrepository.com/artifact/ant/ant
	compile group: 'ant', name: 'ant', version: '1.7.0'
	
	
	// https://mvnrepository.com/artifact/ant/ant-launcher
	compile group: 'ant', name: 'ant-launcher', version: '1.6.5'
	
    
}


jar {
    manifest {
        attributes(
                'Main-Class': 'via.Via'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
 }

task runJar(type: JavaExec) {
	 group "myTasks"
    main = "-jar";
    args jar.archivePath
}

task copyDependencies(type: Copy) {
	group 'myTasks'
	from configurations.compile
	into 'mydepencies'
}

task copyPropertiesFile(type: Copy) {
	group "myTasks"
    from 'via.properties'
    into 'build/libs'
    
    from 'build-libs/via.bat'
    into 'build/libs'
    
}


 
 task deployDistantViaware(type: Copy) {
	group "myTasks"
    from 'via.properties'
    into 'C:/NovoLife/Local/share/viaware'
    
    from 'build-libs/via.bat'
    into 'C:/NovoLife/Local/share/viaware'
       
    from 'build/libs/underconstruction.viaproject.jar'
    into 'C:/NovoLife/Local/share/viaware'
 }

